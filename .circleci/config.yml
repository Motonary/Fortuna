# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.11
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/motonary/Fortuna
    steps:
      - checkout

      - run:
          name: プルリクエストに紐付いていたらbaseブランチをマージ
          command: |
              if [[ -n ${CIRCLE_PULL_REQUEST} ]]; then
                if [[ ! -e jq ]]; then
                  curl -L "https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64" -o jq
                  chmod +x jq
                fi
                GITHUB_PR_URL=`echo "${CIRCLE_PULL_REQUEST}" | sed -e s:github.com:api.github.com/repos: -e s:pull:pulls:`
                TARGET_BRANCH=$(curl -H "Authorization: token ${GITHUB_ACCESS_TOKEN}" "${GITHUB_PR_URL}" | jq '.base.ref' | tr -d '"')
                git config user.name rechtburg
                git config user.email y.shirota.research.a.develop@gmail.com
                git merge "origin/${TARGET_BRANCH}" -m "merge for test"
              fi

      # specify any bash command here prefixed with `run: `
      - run: go get github.com/dgrijalva/jwt-go
      - run: go get github.com/go-chi/chi
      - run: go get github.com/go-chi/jwtauth
      - run: go get github.com/Motonary/Fortuna
      - run: go test -v -cover ./...
